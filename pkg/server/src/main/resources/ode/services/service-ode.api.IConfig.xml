<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

  <description>
  Service implementation ("internal-") and wrapper ("managed-") for the 
  ode.api.IConfig interface. 

  managed-ode.api.IConfig - This is for remoting and should only be apply 
    interceptors to the "internal" version below. essentially ignore.
  internal-ode.api.IConfig - This is the bean that needs to have items 
    injected. Used server side. If not available, everyone has to go 
    through the levels of interception

  </description>

  <bean parent="level2" id="internal-ode.api.IConfig" class="ode.logic.ConfigImpl">
    <description>
    The implementation of our interface. Provided with a JDBC template for 
    accessing the database time. Safe to use ONLY from within another service!
    </description>
    <property name="databaseIdentity" ref="databaseIdentity"/>
    <property name="sqlAction" ref="simpleSqlAction"/>
    <property name="preferenceContext" ref="preferenceContext"/>
    <property name="currentDetails" ref="currentDetails"/>
  </bean>
  
  <bean id="managed-ode.api.IConfig" parent="managedService">
    <description>
    An AOP-wrapped proxy for our implementation. Enforces all server policies.
    </description>
    <property name="proxyInterfaces" value="ode.api.IConfig"/>
    <property name="target" ref="internal-ode.api.IConfig"/>
  </bean>

  <bean class="ode.services.util.ReadOnlyConfigInit" lazy-init="false">
    <description>
    Includes among the configuration keys information about the read-only status as determined at run-time during start-up.
    </description>
    <constructor-arg ref="internal-ode.api.IConfig"/>
    <constructor-arg ref="readOnlyStatus"/>
  </bean>

  <bean class="ode.services.util.BioFormatsConfigInit" lazy-init="false">
    <description>
    Includes among the configuration keys Bio-Formats version metadata as determined at run-time during start-up.
    </description>
    <constructor-arg ref="internal-ode.api.IConfig"/>
  </bean>

<!--
  "Private" resources
  =======================================================================
  These are not really private in the sense that they are scoped and truly
  inaccessible, but more by convention that other services should probably
  not access them since they may change at any time, e.g.:
  
  <bean id="ode.api.IConfig:configDefaults" class="java.util.HashMap">
    <property name="db.hash" value="CAFEBABE"/>
  </bean>

-->  
  
</beans>