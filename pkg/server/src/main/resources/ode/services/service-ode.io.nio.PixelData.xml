<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

  <bean id="pixelDataThread" class="ode.services.pixeldata.PixelDataThread"
    init-method="start" destroy-method="stop">
    <constructor-arg index="0" ref="sessionManager"/>
    <constructor-arg index="1" ref="executor"/>
    <constructor-arg index="2" ref="pixelDataHandler"/>
    <constructor-arg index="3" ref="uuid"/>
    <constructor-arg index="4" value="${ode.pixeldata.threads}"/>
    <constructor-arg index="5" ref="metrics"/>
    <constructor-arg index="6" ref="readOnlyStatus"/>
  </bean>

  <bean id="pixelDataHandler" class="ode.services.pixeldata.PixelDataHandler">
    <constructor-arg ref="pixelDataEventLogLoader"/>
    <constructor-arg ref="/ODE/Pixels"/>
    <!--  Re-using repetitions for number of threads -->
    <property name="repetitions" value="${ode.pixeldata.threads}"/>
  </bean>

  <alias name="${ode.pixeldata.event_log_loader}" alias="pixelDataEventLogLoader"/>

  <bean id="pixelDataEventLogQueue" class="ode.services.eventlogs.EventLogQueue">
    <constructor-arg index="0" ref="metrics"/>
    <constructor-arg index="1" value="${ode.search.max_partition_size}"/>
    <constructor-arg index="2" value="ode.model.core.Pixels"/>
    <constructor-arg index="3" value="PIXELDATA"/>
    <property name="queryService" ref="internal-ode.api.LocalQuery"/>
    <property name="sqlAction" ref="simpleSqlAction"/>
    <property name="key" value="pixelDataEventLogLoader.v1.current_id"/>
    <property name="types" ref="internal-ode.api.ITypes"/>
    <property name="batchSize" value="${ode.pixeldata.batch}"/>
    <property name="excludes" value=""/>
  </bean>

  <bean id="pixelDataPersistentEventLogLoader" class="ode.services.pixeldata.PersistentEventLogLoader">
    <constructor-arg index="0"><null/></constructor-arg><!-- Legacy has repo == null -->
    <constructor-arg index="1" value="${ode.pixeldata.threads}"/>
    <property name="queryService" ref="internal-ode.api.LocalQuery"/>
    <property name="sqlAction" ref="simpleSqlAction"/>
    <property name="key" value="pixelDataEventLogLoader.v1.current_id"/>
    <property name="types" ref="internal-ode.api.ITypes"/>
    <property name="batchSize" value="${ode.pixeldata.batch}"/>
  </bean>

  <bean id="pixelDataThreadRun" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="pixelDataThread" />
    <property name="targetMethod" value="run" />
    <property name="concurrent" value="false" />
  </bean>

  <!--
  <bean id="pixelDataTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="pixelDataThreadRun" />
    <property name="cronExpression" value="${ode.pixeldata.cron}" />
  </bean>
  -->

</beans>