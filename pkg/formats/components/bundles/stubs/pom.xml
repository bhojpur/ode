<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
    http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>net.bhojpur.ode</groupId>
  <artifactId>ode-stubs</artifactId>
  <version>1.0.0</version>
  <packaging>pom</packaging>

  <name>Bhojpur ODE Component Stubs</name>
  <description>The components that are stubs of other external projects.</description>
  <url>https://www.bhojpur.net/site/products/ode-formats</url>
  <inceptionYear>2018</inceptionYear>
  <organization>
    <name>Bhojpur Consulting</name>
    <url>https://www.bhojpur-consulting.com/</url>
  </organization>
  <licenses>
    <license>
      <name>Simplified BSD License</name>
      <url>https://opensource.org/licenses/BSD-2-Clause</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Bhojpur ODE Team</name>
      <email>product@bhojpur-consulting.com</email>
    </developer>
  </developers>
  <contributors>
    <contributor><name>Bimla Pandey</name></contributor>
    <contributor><name>Divya Rai</name></contributor>
  </contributors>

  <mailingLists>
    <mailingList>
      <name>ODE-users</name>
      <subscribe>http://lists.bhojpur.net/mailman/listinfo/ode-users/</subscribe>
      <unsubscribe>http://lists.bhojpur.net/mailman/listinfo/ode-users/</unsubscribe>
      <post>ode-users@lists.bhojpur.net</post>
      <archive>http://lists.bhojpur.net/pipermail/ode-users/</archive>
    </mailingList>
    <mailingList>
      <name>ODE-devel</name>
      <subscribe>http://lists.bhojpur.net/mailman/listinfo/ode-devel/</subscribe>
      <unsubscribe>http://lists.bhojpur.net/mailman/listinfo/ode-devel/</unsubscribe>
      <post>ode-devel@lists.bhojpur.net</post>
      <archive>http://lists.bhojpur.net/pipermail/ode-devel/</archive>
    </mailingList>
  </mailingLists>

  <prerequisites>
    <maven>3.8.6</maven>
  </prerequisites>

  <modules>
    <module>lwf-stubs</module>
    <module>mipav-stubs</module>
  </modules>

  <scm>
    <connection>scm:git:https://github.com/bhojpur/ode</connection>
    <developerConnection>scm:git:git@github.com:bhojpur/ode</developerConnection>
    <tag>HEAD</tag>
    <url>http://github.com/bhojpur/ode</url>
  </scm>
  <issueManagement>
    <system>Trac</system>
    <url>https://trac.bhojpur.net/ode</url>
  </issueManagement>
  <ciManagement>
    <system>Jenkins</system>
    <url>https://ci.bhojpur.net/</url>
  </ciManagement>
  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <properties>
    <!-- If two artifacts on the classpath use two different versions of the
         same dependency, behavior is inconsistent at best, and often broken.
         The following properties facilitate consistency of dependency
         versions between various projects in the SciJava software stack.
         When possible, we advise using the relevant groupId and version
         properties for your dependencies rather than hardcoding them. -->

    <!-- NB: Avoid platform encoding warning when copying resources. -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- NB: Specify formatting of the maven.build.timestamp property. -->
    <maven.build.timestamp.format>d MMMMM yyyy</maven.build.timestamp.format>

    <!-- NB: Override argLine property for extra maven-surefire-plugin args. -->
    <argLine/>
  </properties>

  <build>
    <!-- It is nice for "mvn" with no arguments to do something reasonable. -->
    <defaultGoal>install</defaultGoal>

    <resources>
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.properties</include>
        </includes>
      </resource>
    </resources>

    <plugins>
      <!-- Create -sources.jar when building. -->
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>

      <!-- Add Implementation-Build entry to JAR manifest. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
      </plugin>

      <!-- Enable 'license:' goals. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
	  <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.7.0</version>
          <!-- Require the Java 8 platform. -->
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
          </configuration>
        </plugin>

      <!-- Enable 'license:' goals. -->
        <!-- License Maven plugin -
             http://mojo.codehaus.org/license-maven-plugin/
             This plugin manages project licenses and source file headers. -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>1.16</version>
          <configuration>
            <licenseName>bsd_2</licenseName>
            <organizationName>Bhojpur Consulting:
    - Research &amp; Development</organizationName>
            <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
            <canUpdateDescription>true</canUpdateDescription>
            <!-- NB: Avoid stomping on variant copyright holders. -->
            <canUpdateCopyright>false</canUpdateCopyright>
            <roots>
              <root>src</root>
            </roots>
            <extraExtensions>
              <bsh>java</bsh>
              <config>properties</config>
              <ijm>java</ijm>
            </extraExtensions>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.0</version>
        </plugin>

        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>

        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>

        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>

        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.1.0</version>
          <!-- Always add classpath to JAR manifests. -->
          <configuration>
            <skipIfEmpty>true</skipIfEmpty>
            <archive>
              <manifest>
                <addClasspath>true</addClasspath>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
              <manifestEntries>
                <!-- Add SCM revision from buildnumber plugin, if available. -->
                <Implementation-Build>${buildNumber}</Implementation-Build>
                <!-- Add a formatted timestamp for the build. -->
                <Implementation-Date>${maven.build.timestamp}</Implementation-Date>
              </manifestEntries>
            </archive>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <!-- NB: The same version declaration and configuration block also
               appears in the <reporting> section, and must be kept in sync. -->
          <version>3.0.1</version>
          <configuration>
            <failOnError>false</failOnError>
            <links>
              <link>http://docs.oracle.com/javase/7/docs/api/</link>
            </links>
          </configuration>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>3.5.2</version>
        </plugin>

        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5.3</version>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.scm</groupId>
              <artifactId>maven-scm-provider-gitexe</artifactId>
              <version>1.9</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>

        <!-- Create -sources.jar when building. -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.0.1</version>
          <!-- Build source artifact in addition to main artifact. -->
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Build Number Maven plugin -
             http://mojo.codehaus.org/buildnumber-maven-plugin/
             This plugin embeds a build number in the JAR manifest. -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>1.4</version>
          <!-- Record SCM revision in manifest. -->
          <executions>
            <execution>
              <phase>validate</phase>
              <goals>
                <goal>create</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
            <revisionOnScmFailure>UNKNOWN</revisionOnScmFailure>
          </configuration>
        </plugin>

        <!-- Exec Maven plugin -
        http://www.mojohaus.org/exec-maven-plugin/
        This plugin launches a Java class using Maven. -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.6.0</version>
        </plugin>

        <!-- Versions Maven plugin -
             http://mojo.codehaus.org/versions-maven-plugin/
             Check for new plugin versions using
             "mvn versions:display-plugin-updates" -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.5</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <!-- Stage releases with nexus -->
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.8</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>false</autoReleaseAfterClose>
            </configuration>
          </plugin>

          <!-- gpg release signing -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>