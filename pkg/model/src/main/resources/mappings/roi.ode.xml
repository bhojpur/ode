<?xml version="1.0" encoding="UTF-8"?>

<types>
        <type id="ode.model.roi.Roi" annotated="true" described="true">
                <properties>
                        <!--optional name="union" type="boolean"/-->
                        <optional name="name" type="text"/>
                        <onemany name="shapes" type="ode.model.roi.Shape" inverse="roi" ordered="true"/>
                        <optional name="image" type="ode.model.core.Image" inverse="rois"/>
                        <optional name="source" type="ode.model.core.OriginalFile"/>
                        <parent name="folderLinks" type="ode.model.containers.FolderRoiLink" target="ode.model.containers.Folder"/>
                </properties>
        </type>
        <abstract id="ode.model.roi.Shape" discriminator="" annotated="true">
                <properties>
                        <!-- ====== ODE SPECIFIC ====== -->
                        <optional name="theZ" type="int"/>
                        <optional name="theT" type="int"/>
                        <optional name="theC" type="int"/>
                        <manyone name="roi" type="ode.model.roi.Roi" inverse="shapes" ordered="true"/>
                       <!-- Though ROI modification may be implemented via
                            copy-on-write, conceptually a "locked" Shape should
                            not be modifiable by the user -->
                        <optional name="locked" type="boolean"/>
                        <!-- ====== SVG BASED ====== -->
                        <!-- A note on color:
                             5 different string representations are supported in SVG:
                               Three digit hex : #rgb with each 0-F
                               Six digit hex : #rrggbb with each 00-FF
                               Integer functional : rgb(rrr, ggg, bbb) with each 0-255
                               Float functional : rgb(R%, G%, B%) with each 0.0-100.0
                               Color keyword : red, blue, black, ...
                        -->
                        <!-- Global -->
                        <optional name="transform" type="ode.model.roi.AffineTransform"/>
                        <!-- Fill -->
                        <optional name="fillColor" type="int"/>
                        <optional name="fillRule" type="string"/><!-- even-odd, nonzero -->
                        <!-- Stroke -->
                        <optional name="strokeColor" type="int"/>
                        <optional name="strokeDashArray" type="string"/><!-- e.g. none, 10 20 30 10 -->
                        <optional name="strokeWidth" type="ode.model.units.Length"/><!-- point default -->
                        <!-- Font -->  <!-- n.b.: fontFamily is under consideration for removal -->
                        <optional name="fontFamily" type="string"/><!-- e.g. monospace, serif -->
                        <optional name="fontSize" type="ode.model.units.Length"/><!-- point default -->
                        <optional name="fontStyle" type="string"/><!-- normal, italic, oblique -->
                </properties>
        </abstract>
        <type id="ode.model.roi.Label" discriminator="text" superclass="ode.model.roi.Shape">
                <properties>
                        <optional name="x" type="double"/>  <!-- left of text box -->
                        <optional name="y" type="double"/>  <!-- top of text box -->
                        <optional name="textValue" type="text"/>
                 </properties>
        </type>
        <type id="ode.model.roi.Rectangle" discriminator="rect" superclass="ode.model.roi.Shape">
                <properties>
                        <optional name="x" type="double"/>
                        <optional name="y" type="double"/>
                        <optional name="width" type="double"/>
                        <optional name="height" type="double"/>
                        <optional name="textValue" type="text"/>
                </properties>
        </type>
        <type id="ode.model.roi.Mask" discriminator="mask" superclass="ode.model.roi.Shape">
                <properties>
                        <optional name="x" type="double"/>
                        <optional name="y" type="double"/>
                        <optional name="width" type="double"/>
                        <optional name="height" type="double"/>
                        <optional name="pixels" type="ode.model.core.Pixels"/>
                        <optional name="textValue" type="text"/>
			<optional name="bytes" type="byte[]"/>
                </properties>
        </type>
        <type id="ode.model.roi.Ellipse" discriminator="ellipse" superclass="ode.model.roi.Shape">
                <properties>
                        <optional name="x" type="double"/>
                        <optional name="y" type="double"/>
                        <optional name="radiusX" type="double"/>
                        <optional name="radiusY" type="double"/>
                        <optional name="textValue" type="text"/>
                </properties>
        </type>
        <type id="ode.model.roi.Point" discriminator="point" superclass="ode.model.roi.Shape">
                <properties>
                        <optional name="x" type="double"/>
                        <optional name="y" type="double"/>
                        <optional name="textValue" type="text"/>
                </properties>
        </type>
        <!-- Warning: Path is DEPRECATED and may be removed in Bhojpur ODE -->
        <type id="ode.model.roi.Path" discriminator="path" superclass="ode.model.roi.Shape" deprecated="true">
                <properties>
                        <optional name="d" type="text"/><!-- e.g. "M 100 100 L 300 100 L 200 300 z" -->
                        <optional name="textValue" type="text"/>
               </properties>
        </type>
        <type id="ode.model.roi.Polygon" discriminator="polygon" superclass="ode.model.roi.Shape">
                <properties>
                        <optional name="points" type="text"/>
                        <optional name="textValue" type="text"/>
                </properties>
        </type>
        <type id="ode.model.roi.Polyline" discriminator="polyline" superclass="ode.model.roi.Shape">
                <properties>
                        <optional name="points" type="text"/>
                        <optional name="markerStart" type="string"/>  <!-- only "Arrow" at present -->
                        <optional name="markerEnd"   type="string"/>  <!-- only "Arrow" at present -->
                        <optional name="textValue" type="text"/>
                </properties>
        </type>
        <type id="ode.model.roi.Line" discriminator="line" superclass="ode.model.roi.Shape">
                <properties>
                        <optional name="x1" type="double"/>
                        <optional name="y1" type="double"/>
                        <optional name="x2" type="double"/>
                        <optional name="y2" type="double"/>
                        <optional name="markerStart" type="string"/>  <!-- only "Arrow" at present -->
                        <optional name="markerEnd"   type="string"/>  <!-- only "Arrow" at present -->
                        <optional name="textValue" type="text"/>
                </properties>
        </type>
        <type id="ode.model.roi.AffineTransform">
                <!-- A00 A01 A02 -->
                <!-- A10 A11 A12 -->
                <!--  0   0   1  -->
                <properties>
                        <required name="a00" type="double"/>  <!-- x scaling -->
                        <required name="a10" type="double"/>  <!-- y shearing -->
                        <required name="a01" type="double"/>  <!-- x shearing -->
                        <required name="a11" type="double"/>  <!-- y scaling -->
                        <required name="a02" type="double"/>  <!-- x translation -->
                        <required name="a12" type="double"/>  <!-- y translation -->
                </properties>
        </type>
        <!-- MISSING:
          ShapeConnections
          RoiConnections
          Gradients
          Text as shape
          Text on curve
          Image
          Defs (trefs, etc.)
          Support for "inherit"
          Circles are merged with ellipses for the moment.
          Hierarchical groupings "g". See Shape.g. Use "derived" and "measurements" for special cases.
           Possibly use syntax "/Group1/Group1-1/..." or a start/stop group shape?
        -->
</types>