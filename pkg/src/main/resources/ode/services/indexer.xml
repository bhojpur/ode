<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
  <description>
  Registers the cron job for background indexing.
  </description>

  <bean id="dbUserCheck"
     class="ode.services.util.DBUserCheck" lazy-init="false">
     <constructor-arg ref="simpleSqlAction"/>
     <constructor-arg ref="preferenceContext"/>
     <constructor-arg ref="readOnlyStatus"/>
  </bean>

  <bean id="jvmSettingsCheck"
     class="ode.services.util.JvmSettingsCheck"
     lazy-init="false">
  </bean>

  <bean id="adapterName" class="java.lang.String">
    <constructor-arg value="IndexerAdapter"/>
  </bean>

  <!-- Disable legacy indexer.

  <bean id="fullTextIndexerTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
    <property name="jobDetail" ref="fullTextThreadRun" />
    <property name="cronExpression" value="${ode.search.cron}" />
  </bean>

  <bean id="fullTextIndexerTriggerGuard" class="ode.services.util.BeanInstantiationGuard" depends-on="executor">
    <constructor-arg ref="readOnlyStatus"/>
    <constructor-arg value="fullTextIndexerTrigger"/>
    <property name="isWriteDb" value="true"/>
    <property name="isWriteRepo" value="true"/>
  </bean>

  -->

  <bean id="fullTextIndexer2" class="ode.services.fulltext.FullTextIndexer2"
        init-method="start" destroy-method="stop" lazy-init="false">
    <constructor-arg ref="scheduler"/>
    <constructor-arg ref="sessionFactory"/>
    <constructor-arg ref="fullTextBridge"/>
    <constructor-arg value="PersistentEventLogLoader.v2.current_id"/>
    <constructor-arg value="${ode.search.include_actions}"/>
    <constructor-arg value="${ode.search.include_types}"/>
    <property name="cronExpression" value="${ode.search.cron}"/>
  </bean>

  <bean id="fullTextIndexer2TriggerGuard" class="ode.services.util.BeanInstantiationGuard" depends-on="executor">
    <constructor-arg ref="readOnlyStatus"/>
    <constructor-arg value="fullTextIndexer2"/>
    <property name="isWriteDb" value="true"/>
    <property name="isWriteRepo" value="true"/>
  </bean>

  <!-- used by session factory -->
  <bean id="odeInterceptor" class="ode.security.basic.SqlQueryInterceptor">
    <constructor-arg ref="sqlQueryTransformer"/>
  </bean>

  <bean id="oneGroupSecurityFilter" class="ode.security.basic.OneGroupSecurityFilter">
    <property name="defaultFilterCondition" value="true"/>
  </bean>

  <bean id="allGroupSecurityFilter" class="ode.security.basic.AllGroupsSecurityFilter">
    <constructor-arg ref="simpleSqlAction"/>
    <constructor-arg ref="roles"/>
    <property name="defaultFilterCondition" value="true"/>
  </bean>

  <bean id="sharingSecurityFilter" class="ode.security.basic.SharingSecurityFilter">
    <constructor-arg ref="roles"/>
    <constructor-arg ref="shareStore"/>
    <property name="defaultFilterCondition" value="true"/>
  </bean>

  <bean id="lightAdminPrivilegesSecurityFilter" class="ode.security.basic.LightAdminPrivilegesSecurityFilter">
    <constructor-arg ref="roles"/>
    <property name="defaultFilterCondition" value="true"/>
  </bean>

  <bean id="eventListeners" class="ode.security.basic.EventListenersFactoryBean"
      depends-on="serverDirectoryCheck">
    <constructor-arg ref="currentDetails"/>
    <constructor-arg ref="tokenHolder"/>
    <constructor-arg index="2"><null/></constructor-arg>
    <constructor-arg index="3"><null/></constructor-arg>
    <property name="debugAll" value="false"/>
  </bean>

  <alias name="basicSecuritySystem" alias="securitySystem"/>
  <bean id="basicSecuritySystem" class="ode.security.basic.BasicSecuritySystem">
    <constructor-arg><null/></constructor-arg>
    <constructor-arg ref="systemTypes"/>
    <constructor-arg ref="currentDetails"/>
    <constructor-arg ref="sessionManager"/>
    <constructor-arg ref="sessionProvider"/>
    <constructor-arg ref="eventProvider"/>
    <constructor-arg ref="roles"/>
    <constructor-arg ref="internalServiceFactory"/>
    <constructor-arg ref="tokenHolder"/>
    <constructor-arg>
      <list>
        <ref bean="securityFilterHolder"/>
      </list>
    </constructor-arg>
    <constructor-arg><bean class="ode.security.policy.DefaultPolicyService"/></constructor-arg>
    <constructor-arg><null/></constructor-arg>
  </bean>

  <bean id="basicSecuritySystemSubstituter" class="ode.services.util.BeanInstantiationSubstituter">
    <constructor-arg ref="readOnlyStatus"/>
    <constructor-arg value="basicSecuritySystem"/>
    <constructor-arg value="ode.security.basic.BasicSecuritySystemReadOnly"/>
    <property name="isWriteDb" value="true"/>  <!-- see SessionProviderInDb.isReadOnly -->
  </bean>

  <bean id="eventHandler" class="ode.security.basic.NullEventHandler">
    <description>
    Scope: private
    </description>
    <constructor-arg ref="basicSecuritySystem"/>
    <constructor-arg ref="odeSessionFactory"/>
  </bean>

  <bean id="readOnlyStatus"
      class="ode.services.util.ReadOnlyStatus">
     <constructor-arg value="${ode.cluster.read_only}"/>
     <constructor-arg value="${ode.cluster.read_only.db}"/>
     <constructor-arg value="${ode.cluster.read_only.repo}"/>
     <constructor-arg ref="sqlActionWrapper"/>
     <constructor-arg value="${ode.data.dir}"/>
     <constructor-arg value="${ode.managed.dir}"/>
  </bean>

  <bean id="serverDirectoryCheck"
     class="ode.services.util.ServerDirectoryCheck"
     init-method="run" lazy-init="false">
     <constructor-arg value="${ode.data.dir}"/>
     <constructor-arg value="${ode.managed.dir}"/>
     <constructor-arg ref="readOnlyStatus"/>
  </bean>

  <!-- Workaround for session mgr dependency#5216-->
  <bean id="dbPatchCheck" class="java.lang.Object"/>

  <alias name="${ode.metrics.bean}" alias="metrics"/>

  <bean id="defaultMetrics" class="ode.system.metrics.DefaultMetrics">
      <property name="slf4jMinutes" value="${ode.metrics.slf4j_minutes}"/>
      <property name="beginsWith">
          <list><value>ode.services.fulltext.FullTextIndexer</value></list>
      </property>
      <property name="graphiteAddress" value="${ode.metrics.graphite}"/>
  </bean>

  <bean id="nullMetrics" class="ode.system.metrics.NullMetrics"/>

</beans>