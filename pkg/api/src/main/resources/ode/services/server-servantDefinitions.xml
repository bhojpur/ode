<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

  <bean class="ode.services.server.util.ApiConsistencyCheck">
    <description>
    BeanPostProcessor which checks each newly created servant (see below) for
    proper mappings from the ode.api.* classes. If the servant is ServerOnly,
    then no check is performed.
    </description>
  </bean>

  <!-- Non-ode.api service-based
  ==============================================================================
  All of these services are marked as "singleton=false" since each ServiceFactoryI
  manages its own statefulness. See documentation in server/resources/ode/API.ice
  -->

  <bean id="ode.api.IRoi" class="ode.api._IRoiTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.RoiI">
            <constructor-arg ref="throttlingStrategy"/>
            <constructor-arg ref="geomTool"/>
            <constructor-arg ref="simpleSqlAction"/>
        </bean>
    </constructor-arg>
  </bean>
  <bean id="populateRoiJob" class="ode.services.roi.PopulateRoiJob" depends-on="scriptRepoHelper">
      <constructor-arg ref="roles"/>
      <constructor-arg ref="uuid"/>
      <constructor-arg ref="executor"/>
  </bean>
  <bean id="geomTool" class="ode.services.roi.GeomTool" lazy-init="false">
      <constructor-arg ref="roiPixData"/>
      <constructor-arg ref="simpleSqlAction"/>
      <constructor-arg ref="odeSessionFactory"/>
      <constructor-arg ref="executor"/>
      <constructor-arg ref="uuid"/>
  </bean>
  <bean id="roiPixData" class="ode.services.roi.PixelData" lazy-init="false">
      <constructor-arg ref="internal-ode.api.IPixels"/>
      <constructor-arg ref="/ODE/Pixels"/>
  </bean>

  <bean id="ode.api.IScript" class="ode.api._IScriptTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.ScriptI">
            <constructor-arg ref="throttlingStrategy"/>
            <constructor-arg ref="scriptRepoHelper"/>
            <constructor-arg ref="aclVoter"/>
            <constructor-arg ref="odeInterceptor"/>
            <constructor-arg ref="checksumProviderFactory"/>
            <constructor-arg ref="paramsCache"/>
        </bean>
    </constructor-arg>
  </bean>

  <bean id="ode.api.Exporter" class="ode.api._ExporterTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.ExporterI">
            <constructor-arg ref="throttlingStrategy"/>
            <constructor-arg ref="databaseIdentity"/>
            <constructor-arg ref="/ODE/Pixels"/>
        </bean>
    </constructor-arg>
  </bean>

  <bean id="ode.api.ITimeline" class="ode.api._ITimelineTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.TimelineI">
            <constructor-arg ref="throttlingStrategy"/>
            <property name="sessionManager" ref="sessionManager"/>
            <property name="securitySystem" ref="securitySystem"/>
        </bean>
    </constructor-arg>
  </bean>

  <bean id="ode.grid.SharedResources" class="ode.grid._SharedResourcesTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.SharedResourcesI">
            <constructor-arg ref="throttlingStrategy"/>
            <constructor-arg ref="TopicManager"/>
            <constructor-arg ref="Registry"/>
            <constructor-arg ref="paramsCache"/>
            <constructor-arg ref="scriptRepoHelper"/>
            <constructor-arg value="${ode.grid.registry_timeout}"/>
            <constructor-arg value="${ode.scripts.timeout}"/>
        </bean>
    </constructor-arg>
  </bean>

  <!-- Stateless ode.api service-based
  -->

  <bean id="ode.api.IAdmin" class="ode.api._IAdminTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.AdminI">
            <constructor-arg ref="managed-ode.api.IAdmin"/>
            <constructor-arg ref="throttlingStrategy"/>
        </bean>
    </constructor-arg>
  </bean>

  <bean id="ode.api.IConfig" class="ode.api._IConfigTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.ConfigI">
            <constructor-arg ref="managed-ode.api.IConfig"/>
            <constructor-arg ref="throttlingStrategy"/>
        </bean>
    </constructor-arg>
  </bean>

  <bean id="ode.api.IContainer" class="ode.api._IContainerTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.ContainerI">
            <constructor-arg ref="managed-ode.api.IContainer"/>
            <constructor-arg ref="throttlingStrategy"/>
        </bean>
    </constructor-arg>
  </bean>

  <bean id="ode.api.ILdap" class="ode.api._ILdapTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.LdapI">
            <constructor-arg ref="managed-ode.api.ILdap"/>
            <constructor-arg ref="throttlingStrategy"/>
        </bean>
    </constructor-arg>
  </bean>


  <bean id="ode.api.IPixels" class="ode.api._IPixelsTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.PixelsI">
            <constructor-arg ref="managed-ode.api.IPixels"/>
            <constructor-arg ref="throttlingStrategy"/>
        </bean>
    </constructor-arg>
  </bean>

  <bean id="ode.api.IProjection" class="ode.api._IProjectionTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.ProjectionI">
            <constructor-arg ref="managed-ode.api.IProjection"/>
            <constructor-arg ref="throttlingStrategy"/>
        </bean>
    </constructor-arg>
  </bean>

  <bean id="ode.api.IQuery" class="ode.api._IQueryTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.QueryI">
            <constructor-arg ref="managed-ode.api.IQuery"/>
            <constructor-arg ref="throttlingStrategy"/>
        </bean>
    </constructor-arg>
  </bean>

  <bean id="ode.api.IRenderingSettings" class="ode.api._IRenderingSettingsTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.RenderingSettingsI">
            <constructor-arg ref="managed-ode.api.IRenderingSettings"/>
            <constructor-arg ref="throttlingStrategy"/>
        </bean>
    </constructor-arg>
  </bean>

  <bean id="ode.api.IRepositoryInfo" class="ode.api._IRepositoryInfoTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.RepositoryInfoI">
            <constructor-arg ref="managed-ode.api.IRepositoryInfo"/>
            <constructor-arg ref="throttlingStrategy"/>
        </bean>
    </constructor-arg>
  </bean>

  <bean id="ode.api.ISession" class="ode.api._ISessionTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.SessionI">
            <constructor-arg ref="managed-ode.api.ISession"/>
            <constructor-arg ref="throttlingStrategy"/>
        </bean>
    </constructor-arg>
  </bean>

  <bean id="ode.api.IShare" class="ode.api._IShareTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.ShareI">
            <constructor-arg ref="managed-ode.api.IShare"/>
            <constructor-arg ref="throttlingStrategy"/>
        </bean>
    </constructor-arg>
  </bean>

  <bean id="ode.api.ITypes" class="ode.api._ITypesTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.TypesI">
            <constructor-arg ref="managed-ode.api.ITypes"/>
            <constructor-arg ref="throttlingStrategy"/>
        </bean>
    </constructor-arg>
  </bean>

  <bean id="ode.api.IUpdate" class="ode.api._IUpdateTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.UpdateI">
            <constructor-arg ref="managed-ode.api.IUpdate"/>
            <constructor-arg ref="throttlingStrategy"/>
        </bean>
    </constructor-arg>
  </bean>

 <bean id="ode.api.IMetadata" class="ode.api._IMetadataTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.MetadataI">
            <constructor-arg ref="managed-ode.api.IMetadata"/>
            <constructor-arg ref="throttlingStrategy"/>
        </bean>
    </constructor-arg>
  </bean>


  <!-- Stateful ode.api service-based -->

  <bean id="ode.api.JobHandle" class="ode.api._JobHandleTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.JobHandleI">
            <constructor-arg ref="managed-ode.api.JobHandle"/>
            <constructor-arg ref="throttlingStrategy"/>
        </bean>
    </constructor-arg>
  </bean>

  <bean id="ode.api.MetadataStore" class="ode.api._MetadataStoreTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.MetadataStoreI">
            <constructor-arg ref="throttlingStrategy"/>
            <constructor-arg ref="populateRoiJob"/>
            <constructor-arg ref="simpleSqlAction"/>
            <constructor-arg ref="/ODE/Files"/>
            <constructor-arg value="${ode.data.dir}"/>
        </bean>
    </constructor-arg>
  </bean>

  <bean id="ode.api.RawFileStore" class="ode.api._RawFileStoreTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.RawFileStoreI">
            <constructor-arg ref="managed-ode.api.RawFileStore"/>
            <constructor-arg ref="throttlingStrategy"/>
        </bean>
    </constructor-arg>
  </bean>

  <bean id="ode.api.RawPixelsStore" class="ode.api._RawPixelsStoreTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.RawPixelsStoreI">
            <constructor-arg ref="managed-ode.api.RawPixelsStore"/>
            <constructor-arg ref="throttlingStrategy"/>
        </bean>
    </constructor-arg>
  </bean>

  <bean id="ode.api.RenderingEngine" class="ode.api._RenderingEngineTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.RenderingEngineI">
            <constructor-arg ref="managed-odeis.providers.re.RenderingEngine"/>
            <constructor-arg ref="throttlingStrategy"/>
        </bean>
    </constructor-arg>
  </bean>

  <bean id="ode.api.Search" class="ode.api._SearchTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.SearchI">
            <constructor-arg ref="managed-ode.api.Search"/>
            <constructor-arg ref="throttlingStrategy"/>
        </bean>
    </constructor-arg>
  </bean>

  <bean id="ode.api.ThumbnailStore" class="ode.api._ThumbnailStoreTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.services.server.impl.ThumbnailStoreI">
            <constructor-arg ref="managed-ode.api.ThumbnailStore"/>
            <constructor-arg ref="throttlingStrategy"/>
        </bean>
    </constructor-arg>
  </bean>

  <!-- CMD objects.
  ==============================================================================
  -->

  <bean id="::ode::cmd::Handle" class="ode.cmd._HandleTie" scope="prototype">
    <constructor-arg>
        <bean class="ode.cmd.HandleI" scope="prototype">
            <constructor-arg ref="readOnlyStatus"/>
            <constructor-arg value="${ode.threads.cancel_timeout}"/>
        </bean>
    </constructor-arg>
  </bean>

  <bean class="ode.cmd.RequestObjectFactoryRegistry" lazy-init="false">
      <constructor-arg ref="extendedMetadata"/>
      <constructor-arg ref="aclVoter"/>
      <constructor-arg ref="roles"/>
      <constructor-arg ref="/ODE/Pixels"/>
      <constructor-arg ref="/ODE/Thumbs"/>
      <constructor-arg ref="mailUtil"/>
      <constructor-arg ref="passwordUtil"/>
      <constructor-arg ref="securitySystem"/>
      <constructor-arg ref="passwordProvider"/>
      <constructor-arg ref="graphRequestFactory"/>
      <property name="iceCommunicator" ref="Ice.Communicator"/>
  </bean>

  <bean id="graphRequestFactory" class="ode.cmd.graphs.GraphRequestFactory">
      <constructor-arg ref="aclVoter"/>
      <constructor-arg ref="roles"/>
      <constructor-arg ref="graphPathBean"/>
      <constructor-arg ref="adminPrivileges"/>
      <constructor-arg ref="ode.services.delete.Deletion"/>
      <constructor-arg>
        <map>
          <entry key="ode.cmd.graphs.Chgrp2I" value-ref="chgrpTargets"/>
          <entry key="ode.cmd.graphs.Chmod2I" value-ref="chmodTargets"/>
          <entry key="ode.cmd.graphs.Chown2I" value-ref="chownTargets"/>
          <entry key="ode.cmd.graphs.Delete2I" value-ref="deleteTargets"/>
          <entry key="ode.cmd.graphs.DiskUsage2I" value-ref="diskUsageTargets"/>
          <entry key="ode.cmd.graphs.DuplicateI" value-ref="duplicateTargets"/>
          <entry key="ode.cmd.graphs.FindParentsI" value-ref="containerTargets"/>
          <entry key="ode.cmd.graphs.FindChildrenI" value-ref="containedTargets"/>
        </map>
      </constructor-arg>
      <constructor-arg>
        <map>
          <entry key="ode.cmd.graphs.Chgrp2I" value-ref="chgrpRules"/>
          <entry key="ode.cmd.graphs.Chmod2I" value-ref="chmodRules"/>
          <entry key="ode.cmd.graphs.Chown2I" value-ref="chownRules"/>
          <entry key="ode.cmd.graphs.Delete2I" value-ref="deleteRules"/>
          <entry key="ode.cmd.graphs.DiskUsage2I" value-ref="diskUsageRules"/>
          <entry key="ode.cmd.graphs.DuplicateI" value-ref="duplicateRules"/>
          <entry key="ode.cmd.graphs.FindParentsI" value-ref="containerRules"/>
          <entry key="ode.cmd.graphs.FindChildrenI" value-ref="containedRules"/>
        </map>
      </constructor-arg>
      <constructor-arg>
        <list/>  <!-- unnullable not presently required -->
      </constructor-arg>
      <constructor-arg>
        <set>
          <!-- ode::constants::namespaces::NSCOMPANIONFILE -->
          <value>bhojpur.net/ode/import/companionFile</value>
          <!-- ode::constants::namespaces::NSMEASUREMENT -->
          <value>bhojpur.net/ode/measurement</value>
        </set>
      </constructor-arg>
  </bean>

  <bean class="ode.services.server.impl.commands.RequestObjectFactoryRegistry"
    lazy-init="false">
      <property name="iceCommunicator" ref="Ice.Communicator"/>
  </bean>

  <bean class="ode.services.server.repo.RequestObjectFactoryRegistry"
    lazy-init="false">
     <constructor-arg ref="Registry"/>
     <constructor-arg ref="configuredTileSizes"/>
     <constructor-arg ref="repositoryDao"/>
     <constructor-arg ref="ring"/>
     <constructor-arg ref="/ODE/Pixels"/>
     <property name="iceCommunicator" ref="Ice.Communicator"/>
     <constructor-arg ref="resources"/>
     <constructor-arg ref="managedReaderSecurityCheck"/>
  </bean>

  <bean id="managedReaderSecurityCheck" class="ode.services.server.repo.ManagedReaderSecurityCheck">
    <constructor-arg ref="internal-ode.api.IQuery"/>
    <constructor-arg ref="managedRepoUuids"/>
  </bean>

  <bean class="org.springframework.beans.factory.config.MethodInvokingBean" lazy-init="false">
    <property name="targetObject" ref="/ODE/Pixels"/>
    <property name="targetMethod" value="setReaderSecurityCheck"/>
    <property name="arguments">
      <list>
        <ref bean="managedReaderSecurityCheck"/>
      </list>
    </property>
  </bean>

  <!-- "Self"-factories -->

  <bean class="ode.cmd.admin.UpdateSessionTimeoutRequestI$Factory" lazy-init="false">
      <constructor-arg ref="currentDetails"/>
      <constructor-arg ref="sessionManager"/>
      <constructor-arg ref="securitySystem"/>
      <constructor-arg value="${ode.sessions.max_user_time_to_live}"/>
      <constructor-arg value="${ode.sessions.max_user_time_to_idle}"/>
     <property name="iceCommunicator" ref="Ice.Communicator"/>
  </bean>

  <bean class="ode.cmd.admin.CurrentSessionsRequestI$Factory" lazy-init="false">
      <constructor-arg ref="currentDetails"/>
      <constructor-arg ref="sessionManager"/>
      <constructor-arg ref="sessionProvider"/>
     <property name="iceCommunicator" ref="Ice.Communicator"/>
  </bean>

  <!-- Other data objects
  ==============================================================================
  -->

  <bean id="repoPrincipal" class="ode.system.Principal">
      <constructor-arg index="0" ref="uuid"/>
      <constructor-arg index="1" value="system"/>
      <constructor-arg index="2" value="Internal"/>
  </bean>

  <bean id="repositoryDao" class="ode.services.server.repo.RepositoryDaoImpl">
    <constructor-arg index="0" ref="repoPrincipal"/>
    <constructor-arg index="1" ref="roles"/>
    <constructor-arg index="2" ref="executor"/>
    <constructor-arg index="3" ref="statefulExecutor"/>
    <constructor-arg index="4" ref="odeInterceptor"/>
    <constructor-arg index="5" ref="uuid"/>  <!-- allows setting OriginalFile.repo -->
  </bean>

  <bean id="scheduledExecutorService" class="java.util.concurrent.ScheduledThreadPoolExecutor">
      <constructor-arg value="16"/><!-- at most 16 pings at once -->
  </bean>

  <bean id="resources" class="ode.util.Resources">
      <constructor-arg value="60"/><!-- ping every 60 seconds -->
      <constructor-arg ref="scheduledExecutorService"/>
  </bean>

</beans>